Phase 2: Multiprogramming
Daniel Bouffard, Mathieu Lefebvre, Eric Rheault, Sean Rochon
COSC 3407 - Operating Systems I
Group 1

To get the assignment to run, simply compile everything under the /nachos/ag, /nachos/machine, /nachos/security, /nachos/threads and /nachos/userprog/
directory. To run the working testcases, compile Task1Test1.c, Task1Test2.c and Task3Test1.c in /nachos/test/.
It is recommended to run the program using the nachos shell script located in /nachos/bin/.
Otherwise, you can run it with the command: "java nachos.machine.Machine $*".

Task I
Everything for Task 1 is implemented properly according to the design document. To run the testcases, run nachos -x Task1Test1.coff and Task1Test2.coff

Task II
Task 2 does not have any testcases. As a result, there is nothing to prepare in order to run it properly. The code changes for this 
task are in UserProcess.java and UserKernel.java. The changes are consistent with those described in the design document. 
See that document for greater detail regarding precisely what's new.
Some elements of Task II, namely read and write virtual memory methods, experience an array out of bounds exception. As a result, the 
containing file UserProcess will not contaqin the Task II code. It will be included in another file called UserProcesswTask2.

Task III 
For task 3, three new methods called handleExec, handleJoin and handleExit were added to userProcess with regards to the guidelines 
asked for in the Phase 2 project requirements. To be specific all methods were bulletproofed to the best of my ability and all
methods handle their respective system call (i.e. exit, join and exec). No noteworthy changes beyond the project requirments 
were made to nachos in regards to task 3. For more details about task III see the design documentation detailing the project in
more detail.
Task 3 possess 5 test cases found in the test directory labeled Task3Test1-5 which utilises proc1-3 when testing the methods
of task III. For more information see the TESTCASE readme found alongside this readme. Note that urrently only testcase 1 
functions properly, testcase 2-5 cannot execute properly, only ever returning -1 in the case of exec likely due to invalid 
parameters being passed via the execute call(). All test cases should however give you the gist of what is being tested and 
should compile and work through evidently i am not passing pointers over correctly.

